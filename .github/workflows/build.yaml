name: Build

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:


jobs:  
  build:
    runs-on: ubuntu-latest
    steps:
        - name: Checkout repository
          uses: actions/checkout@v5
        - name: Set up JDK 21
          uses: actions/setup-java@v5
          with:
            distribution: 'temurin' # See 'Supported distributions' for available options
            java-version: '21'
            cache: 'maven'
        - name: Build with Maven
          run: ./mvnw -B package
        - name: Archive production artifacts
          uses: actions/upload-artifact@v4
          with:
            name: employees-jar
            path: target/employees-*.jar
  integration-tests:
    if: false  # Temporarily disable integration tests
    runs-on: ubuntu-latest
    needs: build
    env:
      SPRING_DATASOURCE_URL: jdbc:mariadb://localhost:3306/employees
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: employees
    services:
      maria-db:
        image: mariadb:12.1.1-rc
        env:
          MYSQL_ROOT_PASSWORD: eployees
          MYSQL_DATABASE: employees
          MYSQL_USER: user
          MYSQL_PASSWORD: employees
        ports:
          - 3306:3306
        options: >-
          --health-cmd="healthcheck.sh --connect --innodb_initialized"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '21'
          cache: 'maven'
      - name: Build with Maven
        run: ./mvnw -B verify

  build-images:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    steps:
        - name: Checkout repository
          uses: actions/checkout@v5
        - run: echo "Build docker images"
        - name: Download production artifacts
          uses: actions/download-artifact@v4
          with:
            name: employees-jar
            path: target/
        - name: Login to github
          uses: docker/login-action@v2
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Build and push Docker image
          uses: docker/build-push-action@v5             
          with:
            file: Dockerfile.layers
            context: .
            push: true
            tags: ghcr.io/${{ github.repository }}:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build-images
    steps:        
    - run: echo "Deploy to production"  
    
